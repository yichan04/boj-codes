#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
vector<int> graph[232332];
bool visited[231233]={false};
int result[132123];
int cnt=0;
void dfs(int r)
{
    if(visited[r])
        return;
    else
    {
        visited[r]=true;
        cnt++;
        result[r]=cnt;
        for(int i=0;i<graph[r].size();i++)
              dfs(graph[r][i]);
    }
}
int main(void)
{
    int n,m,r;
    cin>>n>>m>>r;
    for(int i=0;i<m;i++)
    {
        int u,v;
        cin>>u>>v;
        graph[u].push_back(v);//양방향 연결
        graph[v].push_back(u);//양방향 연결
    }
    for(int i=1;i<=n;i++)
        sort(graph[i].begin(),graph[i].end());
    dfs(r);
    for(int i=1;i<=n;i++)
        cout<<result[i]<<'\n';
}
